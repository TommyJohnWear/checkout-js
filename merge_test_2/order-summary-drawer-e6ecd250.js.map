{"version":3,"sources":["webpack://checkout/./src/app/order/OrderSummaryPrice.tsx","webpack://checkout/./src/app/order/OrderSummaryDiscount.tsx","webpack://checkout/./src/app/order/getItemsCount.ts","webpack://checkout/./src/app/order/OrderSummarySection.tsx","webpack://checkout/./src/app/order/OrderSummarySubtotals.tsx","webpack://checkout/./src/app/order/OrderSummaryTotal.tsx","webpack://checkout/./src/app/ui/icon/IconChevronUp.tsx","webpack://checkout/./src/app/ui/icon/IconChevronDown.tsx","webpack://checkout/./src/app/order/mapFromCustom.tsx","webpack://checkout/./src/app/order/getOrderSummaryItemImage.tsx","webpack://checkout/./src/app/order/mapFromDigital.tsx","webpack://checkout/./src/app/order/mapFromGiftCertificate.tsx","webpack://checkout/./src/app/order/mapFromPhysical.tsx","webpack://checkout/./src/app/order/OrderSummaryItem.tsx","webpack://checkout/./src/app/order/OrderSummaryItems.tsx","webpack://checkout/./src/app/ui/modal/ModalTrigger.tsx","webpack://checkout/./src/app/ui/icon/IconGiftCertificate.tsx","webpack://checkout/./src/app/order/getLineItemsCount.ts","webpack://checkout/./src/app/order/OrderSummaryModal.tsx","webpack://checkout/./src/app/order/OrderSummaryDrawer.tsx"],"names":["state","highlight","previousAmount","handleTransitionEnd","node","done","addEventListener","setState","getDerivedStateFromProps","props","amount","render","this","actionLabel","onActionTriggered","children","className","currencyCode","superscript","testId","zeroLabel","displayValue","getDisplayValue","addEndListener","classNames","in","timeout","href","onClick","isNumberValue","code","remaining","onRemoved","rest","id","getItemsCount","physicalItems","digitalItems","giftCertificates","customItems","reduce","total","item","quantity","length","discountAmount","taxes","giftWrappingAmount","shippingAmount","subtotalAmount","handlingAmount","storeCreditAmount","taxAmount","window","utag_data","checkcout_tax_amount","checkcout_shipping_amount","checkout_sub_total","checkcout_discount_amount","label","map","tax","index","key","name","shopperCurrencyCode","storeCurrencyCode","orderAmount","currency","shop_curreny","checkout_order_total","hasDifferentCurrency","undefined","data","toStoreCurrency","withIconContainer","height","viewBox","width","xmlns","d","extendedListPrice","getOrderSummaryItemImage","imageUrl","alt","src","getDigitalItemDescription","downloadPageUrl","content","rel","target","TranslatedString","amountAfterDiscount","extendedSalePrice","image","productOptions","options","option","value","IconGiftCertificate","extendedComparisonPrice","description","giftWrapping","ShopperCurrency","handleToggle","isExpanded","items","cart_total_items","count","slice","sort","variantId","summaryItemProps","renderActions","getLineItemCount","type","Component","isOpen","canHandleEvent","handleOpen","handleClose","componentDidMount","componentWillUnmount","modal","onRequestClose","getLineItemsCount","renderHeader","headerLink","preventDefault","IconClose","ModalHeader","additionalClassName","additionalLineItems","onAfterOpen","storeCurrency","shopperCurrency","lineItems","orderSummarySubtotalsProps","Modal","additionalBodyClassName","additionalHeaderClassName","header","OrderSummarySection","OrderSummaryItems","OrderSummarySubtotals","OrderSummaryTotal","coupons","onRemovedCoupon","onRemovedGiftCertificate","renderModal","ModalTrigger","productWithImage","getImage"],"mappings":"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","file":"order-summary-drawer-e6ecd250.js","sourcesContent":["import classNames from 'classnames';\nimport React, { Component, ReactNode } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { preventDefault } from '../common/dom';\nimport { ShopperCurrency } from '../currency';\n\nexport interface OrderSummaryPriceProps {\n  label: ReactNode;\n  amount?: number | null;\n  zeroLabel?: ReactNode;\n  className?: string;\n  testId?: string;\n  currencyCode?: string;\n  superscript?: string;\n  actionLabel?: ReactNode;\n  onActionTriggered?(): void;\n}\n\nexport interface OrderSummaryPriceState {\n  highlight: boolean;\n  previousAmount?: number;\n}\n\nfunction getDisplayValue(\n  amount?: number | null,\n  zeroLabel?: ReactNode\n): ReactNode | number {\n  const notYetSetSymbol = '--';\n\n  if (typeof amount === 'undefined' || amount === null) {\n    return notYetSetSymbol;\n  }\n\n  if (zeroLabel && amount === 0) {\n    return zeroLabel;\n  }\n\n  return amount;\n}\n\nfunction isNumberValue(\n  displayValue: number | ReactNode\n): displayValue is number {\n  return typeof displayValue === 'number';\n}\n\nclass OrderSummaryPrice extends Component<\n  OrderSummaryPriceProps,\n  OrderSummaryPriceState\n> {\n  static getDerivedStateFromProps(\n    props: OrderSummaryPriceProps,\n    state: OrderSummaryPriceState\n  ) {\n    return {\n      highlight: props.amount !== state.previousAmount,\n      previousAmount: props.amount,\n    };\n  }\n\n  state = {\n    highlight: false,\n    previousAmount: 0,\n  };\n\n  render(): ReactNode {\n    const {\n      amount,\n      actionLabel,\n      onActionTriggered,\n      children,\n      className,\n      currencyCode,\n      superscript,\n      testId,\n      zeroLabel,\n    } = this.props;\n\n    const { highlight } = this.state;\n    const displayValue = getDisplayValue(amount, zeroLabel);\n\n    return (\n      <div data-test={ testId }>\n        <CSSTransition\n            addEndListener={ this.handleTransitionEnd }\n            classNames=\"changeHighlight\"\n            in={ highlight }\n            timeout={ {} }\n        >\n          <div\n              aria-live=\"polite\"\n              className={ classNames(\n              'cart-priceItem',\n              'coupon-container',\n              'optimizedCheckout-contentPrimary',\n              className\n            ) }\n          >\n            <span className=\"cart-priceItem-label\">\n              { currencyCode && (\n                <span className=\"cart-priceItem-currencyCode\">\n                  { `(${currencyCode}) ` }\n                </span>\n              ) }\n              {\n                <span\n                    className=\"totalText cart-subtotal\"\n                    data-test=\"cart-price-label\"\n                >\n                  Total\n                </span>\n              }\n              { onActionTriggered && actionLabel && (\n                <span className=\"cart-priceItem-link\">\n                  <a\n                      className=\"cart-price-action\"\n                      data-test=\"cart-price-callback\"\n                      href=\"#\"\n                      onClick={ preventDefault(onActionTriggered) }\n                  >\n                    { actionLabel }\n                  </a>\n                </span>\n              ) }\n            </span>\n\n            <span className=\"cart-priceItem-value cart-subtotal-container\">\n              <span\n                  className=\"cart-price-value cart-subtotal-value cart-summary-total\"\n                  data-test=\"cart-price-value\"\n              >\n                { isNumberValue(displayValue) ? (\n                  <ShopperCurrency amount={ displayValue } />\n                ) : (\n                  displayValue\n                ) }\n              </span>\n\n              { superscript && (\n                <sup data-test=\"cart-price-value-superscript\">\n                  { superscript }\n                </sup>\n              ) }\n            </span>\n\n            { children }\n          </div>\n        </CSSTransition>\n      </div>\n    );\n  }\n\n  private handleTransitionEnd: (node: HTMLElement, done: () => void) => void = (\n    node,\n    done\n  ) => {\n    const { previousAmount } = this.state;\n\n    node.addEventListener('animationend', ({ target }) => {\n      if (target === node) {\n        this.setState({\n          highlight: false,\n          previousAmount,\n        });\n        done();\n      }\n    });\n  };\n}\n\nexport default OrderSummaryPrice;\n","import React, { memo, FunctionComponent } from 'react';\n\nimport { ShopperCurrency } from '../currency';\nimport { TranslatedString } from '../locale';\n\nimport OrderSummaryPrice, { OrderSummaryPriceProps } from './OrderSummaryPrice';\n\nexport interface OrderSummaryDiscountProps extends OrderSummaryPriceProps {\n    remaining?: number;\n    code?: string;\n    onRemoved?(code: string): void;\n}\n\nconst OrderSummaryDiscount: FunctionComponent<OrderSummaryDiscountProps> = ({\n    code,\n    remaining,\n    amount,\n    onRemoved,\n    ...rest\n}) => (\n    <OrderSummaryPrice\n        { ...rest }\n        { ...(onRemoved && {\n            onActionTriggered: () => code && onRemoved(code),\n            actionLabel: <TranslatedString id=\"cart.remove_action\" />,\n        }) }\n        amount={ -1 * (amount || 0) }\n    >\n        { !!remaining && remaining > 0 && <span\n            className=\"cart-priceItem-postFix optimizedCheckout-contentSecondary\"\n            data-test=\"cart-price-remaining\"\n        >\n            <TranslatedString id=\"cart.remaining_text\" />\n            { ': ' }\n            <ShopperCurrency amount={ remaining } />\n        </span> }\n\n        { code && <span\n            className=\"cart-priceItem-postFix optimizedCheckout-contentSecondary\"\n            data-test=\"cart-price-code\"\n        >\n            { code }\n        </span> }\n    </OrderSummaryPrice>\n);\n\nexport default memo(OrderSummaryDiscount);\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    const totalItemsCount = [\n        ...physicalItems,\n        ...digitalItems,\n        ...(customItems || []),\n    ].reduce((total, item) => total += item.quantity, 0);\n\n    return totalItemsCount + giftCertificates.length;\n}\n","import React, { FunctionComponent } from 'react';\n\nconst OrderSummarySection: FunctionComponent = ({\n    children,\n}) => (\n    <section className=\"cart-section optimizedCheckout-orderSummary-cartSection\">\n        { children }\n    </section>\n);\n\nexport default OrderSummarySection;\n","import { Coupon, GiftCertificate, Tax } from '@bigcommerce/checkout-sdk';\nimport React, { memo, Fragment, FunctionComponent } from 'react';\n\nimport { TranslatedString } from '../locale';\n\nimport OrderSummaryDiscount from './OrderSummaryDiscount';\nimport OrderSummaryPrice from './OrderSummaryPrice';\n\nexport interface OrderSummarySubtotalsProps {\n    coupons?: Coupon[];\n    giftCertificates?: GiftCertificate[];\n    discountAmount?: number;\n    taxes?: Tax[];\n    giftWrappingAmount?: number;\n    shippingAmount?: number;\n    handlingAmount?: number;\n    storeCreditAmount?: number;\n    subtotalAmount: number;\n    onRemovedGiftCertificate?(code: string): void;\n    onRemovedCoupon?(code: string): void;\n}\n\nconst OrderSummarySubtotals: FunctionComponent<OrderSummarySubtotalsProps> = ({\n    discountAmount,\n    taxes,\n    giftWrappingAmount,\n    shippingAmount,\n    subtotalAmount,\n    handlingAmount,\n    storeCreditAmount,\n}) => {\n\n    let taxAmount = 0;\n    if (taxes?.length) {\n      for (const taxObj of taxes) {\n          taxAmount += taxObj.amount;\n      }\n    }\n\n    (window as any).utag_data.checkcout_tax_amount = taxAmount || '';\n    (window as any).utag_data.checkcout_shipping_amount = shippingAmount || '';\n    (window as any).utag_data.checkout_sub_total = subtotalAmount || '';\n    (window as any).utag_data.checkcout_discount_amount = discountAmount || '';\n\n    return (<Fragment>\n        <OrderSummaryPrice\n            amount={ subtotalAmount }\n            className=\"cart-priceItem--subtotal\"\n            label={ <TranslatedString id=\"cart.subtotal_text\" /> }\n            testId=\"cart-subtotal\"\n        />\n\n        { !!discountAmount && <OrderSummaryDiscount\n            amount={ discountAmount }\n            label={ <TranslatedString id=\"cart.discount_text\" /> }\n            testId=\"cart-discount\"\n        /> }\n\n        { !!giftWrappingAmount && <OrderSummaryPrice\n            amount={ giftWrappingAmount }\n            label={ <TranslatedString id=\"cart.gift_wrapping_text\" /> }\n            testId=\"cart-gift-wrapping\"\n        /> }\n\n        <OrderSummaryPrice\n            amount={ shippingAmount }\n            label={ <TranslatedString id=\"cart.shipping_text\" /> }\n            testId=\"cart-shipping\"\n            zeroLabel={ <TranslatedString id=\"cart.free_text\" /> }\n        />\n\n        { !!handlingAmount && <OrderSummaryPrice\n            amount={ handlingAmount }\n            label={ <TranslatedString id=\"cart.handling_text\" /> }\n            testId=\"cart-handling\"\n        /> }\n\n        { (taxes || [])\n            .map((tax, index) =>\n                <OrderSummaryPrice\n                    amount={ tax.amount }\n                    key={ index }\n                    label={ tax.name }\n                    testId=\"cart-taxes\"\n                />\n         ) }\n\n        { !!storeCreditAmount && <OrderSummaryDiscount\n            amount={ storeCreditAmount }\n            label={ <TranslatedString id=\"cart.store_credit_text\" /> }\n            testId=\"cart-store-credit\"\n        /> }\n    </Fragment>);\n};\n\nexport default memo(OrderSummarySubtotals);\n","import React, { Fragment, FunctionComponent } from 'react';\n\nimport { withCurrency, TranslatedString, WithCurrencyProps } from '../locale';\n\nimport OrderSummaryPrice from './OrderSummaryPrice';\n\nexport interface OrderSummaryTotalProps {\n  orderAmount: number;\n  shopperCurrencyCode: string;\n  storeCurrencyCode: string;\n}\n\nconst OrderSummaryTotal: FunctionComponent<\n  OrderSummaryTotalProps & WithCurrencyProps\n> = ({ shopperCurrencyCode, storeCurrencyCode, orderAmount, currency }) => {\n  (window as any).utag_data.shop_curreny = shopperCurrencyCode || '';\n  (window as any).utag_data.checkout_order_total = orderAmount || '';\n\n  const hasDifferentCurrency = shopperCurrencyCode !== storeCurrencyCode;\n  const label = (\n    <Fragment>\n      { hasDifferentCurrency ? (\n        <TranslatedString id=\"cart.estimated_total_text\" />\n      ) : (\n        <TranslatedString id=\"cart.estimated_total_text\" />\n      ) }\n      { ` (${shopperCurrencyCode})` }\n    </Fragment>\n  );\n\n  return (\n    <Fragment>\n      <OrderSummaryPrice\n          amount={ orderAmount }\n          className=\"cart-priceItem--total\"\n          label={ label }\n          superscript={ hasDifferentCurrency ? '*' : undefined }\n          testId=\"cart-total\"\n      />\n      { hasDifferentCurrency && currency && (\n        <p\n            className=\"cart-priceItem--totalNote\"\n            data-test=\"cart-price-item-total-note\"\n        >\n          <TranslatedString\n              data={ {\n              total: currency.toStoreCurrency(orderAmount),\n              code: storeCurrencyCode,\n            } }\n              id=\"cart.billed_amount_text\"\n          />\n        </p>\n      ) }\n    </Fragment>\n  );\n};\n\nexport default withCurrency(OrderSummaryTotal);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronUp: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronUp);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronDown: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronDown);\n","import { CustomItem } from '@bigcommerce/checkout-sdk';\n\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromCustom(item: CustomItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedListPrice,\n        name: item.name,\n    };\n}\n\nexport default mapFromCustom;\n","import { DigitalItem, PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode } from 'react';\n\nexport default function getOrderSummaryItemImage(item: DigitalItem | PhysicalItem): ReactNode {\n    if (!item.imageUrl) {\n        return;\n    }\n\n    return <img\n        alt={ item.name }\n        data-test=\"cart-item-image\"\n        src={ item.imageUrl }\n    />;\n}\n","import { DigitalItem } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { TranslatedString } from '../locale';\n\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\nimport { OrderSummaryItemOption, OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromDigital(item: DigitalItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedListPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        name: item.name,\n        image: getOrderSummaryItemImage(item),\n        productOptions: [\n            ...(item.options || []).map(option => ({\n                testId: 'cart-item-product-option',\n                content: `${option.name} ${option.value}`,\n            })),\n            getDigitalItemDescription(item),\n        ],\n    };\n}\n\nfunction getDigitalItemDescription(item: DigitalItem): OrderSummaryItemOption {\n    if (!item.downloadPageUrl) {\n        return {\n            testId: 'cart-item-digital-product',\n            content: <TranslatedString id=\"cart.digital_item_text\" />,\n        };\n    }\n\n    return {\n        testId: 'cart-item-digital-product-download',\n        content:\n            <a\n                href={ item.downloadPageUrl }\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n            >\n                <TranslatedString id=\"cart.downloads_action\" />\n            </a>,\n    };\n}\n\nexport default mapFromDigital;\n","import { GiftCertificateItem } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { IconGiftCertificate } from '../ui/icon';\n\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromGiftCertificate(item: GiftCertificateItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: 1,\n        amount: item.amount,\n        name: item.name,\n        image:\n            <span\n                className=\"productImage-giftCertificate\"\n                data-test=\"cart-item-gift-certificate\"\n            >\n                <IconGiftCertificate />\n            </span>,\n    };\n}\n\nexport default mapFromGiftCertificate;\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\n\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromPhysical(item: PhysicalItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedComparisonPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        name: item.name,\n        image: getOrderSummaryItemImage(item),\n        description: item.giftWrapping ? item.giftWrapping.name : undefined,\n        productOptions: (item.options || []).map(option => ({\n            testId: 'cart-item-product-option',\n            content: `${option.name} ${option.value}`,\n        })),\n    };\n}\n\nexport default mapFromPhysical;\n","import classNames from 'classnames';\nimport { isNumber } from 'lodash';\nimport React, { memo, FunctionComponent, ReactNode } from 'react';\n\nimport { ShopperCurrency } from '../currency';\n\nexport interface OrderSummaryItemProps {\n    id: string | number;\n    amount: number;\n    quantity: number;\n    name: string;\n    amountAfterDiscount?: number;\n    image?: ReactNode;\n    description?: ReactNode;\n    productOptions?: OrderSummaryItemOption[];\n}\n\nexport interface OrderSummaryItemOption {\n    testId: string;\n    content: ReactNode;\n}\n\nconst OrderSummaryItem: FunctionComponent<OrderSummaryItemProps> = ({\n    amount,\n    amountAfterDiscount,\n    image,\n    name,\n    productOptions,\n    quantity,\n    description,\n}) => (\n    <div className=\"product\" data-test=\"cart-item\">\n        <figure className=\"product-column product-figure\">\n            { image }\n        </figure>\n\n        <div className=\"product-column product-body\">\n            <h5\n                className=\"product-title optimizedCheckout-contentPrimary\"\n                data-test=\"cart-item-product-title\"\n            >\n                { `${quantity} x ${name}` }\n            </h5>\n            <ul\n                className=\"product-options optimizedCheckout-contentSecondary\"\n                data-test=\"cart-item-product-options\"\n            >\n                { (productOptions || []).map((option, index) =>\n                    <li\n                        className=\"product-option\"\n                        data-test={ option.testId }\n                        key={ index }\n                    >\n                        { option.content }\n                    </li>\n                ) }\n            </ul>\n            { description && <div\n                className=\"product-description optimizedCheckout-contentSecondary\"\n                data-test=\"cart-item-product-description\"\n            >\n                { description }\n            </div> }\n        </div>\n\n        <div className=\"product-column product-actions\">\n            <div\n                className={ classNames(\n                    'product-price',\n                    'optimizedCheckout-contentPrimary',\n                    { 'product-price--beforeDiscount': isNumber(amountAfterDiscount) && amountAfterDiscount !== amount }\n                ) }\n                data-test=\"cart-item-product-price\"\n            >\n                <ShopperCurrency amount={ amount } />\n            </div>\n\n            { isNumber(amountAfterDiscount) && amountAfterDiscount !== amount && <div\n                className=\"product-price\"\n                data-test=\"cart-item-product-price--afterDiscount\"\n            >\n                <ShopperCurrency amount={ amountAfterDiscount } />\n            </div> }\n        </div>\n    </div>\n);\n\nexport default memo(OrderSummaryItem);\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\nimport React, { Fragment, ReactNode } from 'react';\n\nimport { TranslatedString } from '../locale';\nimport { IconChevronDown, IconChevronUp } from '../ui/icon';\n\nimport getItemsCount from './getItemsCount';\nimport mapFromCustom from './mapFromCustom';\nimport mapFromDigital from './mapFromDigital';\nimport mapFromGiftCertificate from './mapFromGiftCertificate';\nimport mapFromPhysical from './mapFromPhysical';\nimport OrderSummaryItem from './OrderSummaryItem';\n\nconst COLLAPSED_ITEMS_LIMIT = 4;\n\nexport interface OrderSummaryItemsProps {\n    items: LineItemMap;\n}\n\ninterface OrderSummaryItemsState {\n    isExpanded: boolean;\n}\n\nclass OrderSummaryItems extends React.Component<OrderSummaryItemsProps, OrderSummaryItemsState> {\n    constructor(props: OrderSummaryItemsProps) {\n        super(props);\n\n        this.state = {\n            isExpanded: false,\n        };\n    }\n\n    render(): ReactNode {\n        const { items } = this.props;\n        const { isExpanded } = this.state;\n\n        (window as any).utag_data.cart_total_items = getItemsCount(items);\n\n        return (<Fragment>\n            <h3\n                className=\"cart-section-heading optimizedCheckout-contentPrimary\"\n                data-test=\"cart-count-total\"\n            >\n                <TranslatedString\n                    data={ { count: getItemsCount(items) } }\n                    id=\"cart.item_count_text\"\n                />\n            </h3>\n\n            <ul aria-live=\"polite\" className=\"productList\">\n                {\n                    [\n                        ...items.physicalItems\n                            .slice()\n                            .sort(item => item.variantId)\n                            .map(mapFromPhysical),\n                        ...items.giftCertificates\n                            .slice()\n                            .map(mapFromGiftCertificate),\n                        ...items.digitalItems\n                            .slice()\n                            .sort(item => item.variantId)\n                            .map(mapFromDigital),\n                        ...(items.customItems || [])\n                            .map(mapFromCustom),\n                    ]\n                        .slice(0, isExpanded ? undefined : COLLAPSED_ITEMS_LIMIT)\n                        .map(summaryItemProps =>\n                            <li\n                                className=\"productList-item is-visible\"\n                                key={ summaryItemProps.id }\n                            >\n                                <OrderSummaryItem { ...summaryItemProps } />\n                            </li>\n                        )\n                }\n            </ul>\n\n            { this.renderActions() }\n        </Fragment>);\n    }\n\n    private renderActions(): ReactNode {\n        const { isExpanded } = this.state;\n\n        if (this.getLineItemCount() < 5) {\n            return;\n        }\n\n        return (\n            <div className=\"cart-actions\">\n                <button\n                    className=\"button button--tertiary button--tiny optimizedCheckout-buttonSecondary\"\n                    onClick={ this.handleToggle }\n                    type=\"button\"\n                >\n                        { isExpanded ?\n                            <Fragment>\n                                <TranslatedString id=\"cart.see_less_action\" />\n                                <IconChevronUp />\n                            </Fragment> :\n                            <Fragment>\n                                <TranslatedString id=\"cart.see_all_action\" />\n                                <IconChevronDown />\n                            </Fragment> }\n                </button>\n            </div>\n        );\n    }\n\n    private getLineItemCount(): number {\n        const { items } = this.props;\n\n        return (items.customItems || []).length +\n            items.physicalItems.length +\n            items.digitalItems.length +\n            items.giftCertificates.length;\n    }\n\n    private handleToggle: () => void = () => {\n        const { isExpanded } = this.state;\n\n        this.setState({ isExpanded: !isExpanded });\n    };\n}\n\nexport default OrderSummaryItems;\n","import React, { Component, Fragment, MouseEventHandler, ReactNode } from 'react';\n\nexport interface ModalTriggerProps {\n    children(props: { onClick: MouseEventHandler }): ReactNode;\n    modal(props: ModalTriggerModalProps): ReactNode;\n}\n\nexport interface ModalTriggerModalProps {\n    isOpen: boolean;\n    onRequestClose(): void;\n}\n\nexport interface ModalTriggerState {\n    isOpen: boolean;\n}\n\nexport default class ModalTrigger extends Component<ModalTriggerProps, ModalTriggerState> {\n    state = {\n        isOpen: false,\n    };\n\n    private canHandleEvent: boolean = false;\n\n    componentDidMount(): void {\n        this.canHandleEvent = true;\n    }\n\n    componentWillUnmount(): void {\n        this.canHandleEvent = false;\n    }\n\n    render() {\n        const { children, modal } = this.props;\n        const { isOpen } = this.state;\n\n        return (\n            <Fragment>\n                { children({ onClick: this.handleOpen }) }\n\n                { modal({\n                    isOpen,\n                    onRequestClose: this.handleClose,\n                }) }\n            </Fragment>\n        );\n    }\n\n    private handleOpen: () => void = () => {\n        if (!this.canHandleEvent) {\n            return;\n        }\n\n        this.setState({\n            isOpen: true,\n        });\n    };\n\n    private handleClose: () => void = () => {\n        if (!this.canHandleEvent) {\n            return;\n        }\n\n        this.setState({\n            isOpen: false,\n        });\n    };\n}\n","import React, { FunctionComponent } from 'react';\n\nconst IconGiftCertificate: FunctionComponent = () => (\n    <svg\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path d=\"M20 6h-2.18c.11-.31.18-.65.18-1a2.996 2.996 0 0 0-5.5-1.65l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z\" />\n    </svg>\n);\n\nexport default IconGiftCertificate;\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getLineItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    return physicalItems.length +\n        digitalItems.length +\n        giftCertificates.length +\n        (customItems || []).length;\n}\n","import { LineItemMap, ShopperCurrency as ShopperCurrencyType, StoreCurrency } from '@bigcommerce/checkout-sdk';\nimport React, { Fragment, FunctionComponent, ReactNode } from 'react';\n\nimport { preventDefault } from '../common/dom';\nimport { TranslatedString } from '../locale';\nimport { IconClose } from '../ui/icon';\nimport { Modal, ModalHeader } from '../ui/modal';\n\nimport OrderSummaryItems from './OrderSummaryItems';\nimport OrderSummarySection from './OrderSummarySection';\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport OrderSummaryTotal from './OrderSummaryTotal';\n\nexport interface OrderSummaryDrawerProps {\n    additionalLineItems?: ReactNode;\n    lineItems: LineItemMap;\n    total: number;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    isOpen: boolean;\n    headerLink?: ReactNode;\n    onRequestClose?(): void;\n    onAfterOpen?(): void;\n}\n\nconst OrderSummaryModal: FunctionComponent<OrderSummaryDrawerProps & OrderSummarySubtotalsProps> = ({\n    additionalLineItems,\n    children,\n    onRequestClose,\n    onAfterOpen,\n    storeCurrency,\n    shopperCurrency,\n    isOpen,\n    headerLink,\n    lineItems,\n    total,\n    ...orderSummarySubtotalsProps\n}) => (\n<Modal\n    additionalBodyClassName=\"cart-modal-body optimizedCheckout-orderSummary\"\n    additionalHeaderClassName=\"cart-modal-header optimizedCheckout-orderSummary\"\n    header={ renderHeader({ headerLink, onRequestClose }) }\n    isOpen={ isOpen }\n    onAfterOpen={ onAfterOpen }\n    onRequestClose={ onRequestClose }\n>\n    <OrderSummarySection>\n        <OrderSummaryItems items={ lineItems } />\n    </OrderSummarySection>\n    <OrderSummarySection>\n        <OrderSummarySubtotals\n            { ...orderSummarySubtotalsProps }\n        />\n        { additionalLineItems }\n    </OrderSummarySection>\n    <OrderSummarySection>\n        <OrderSummaryTotal\n            orderAmount={ total }\n            shopperCurrencyCode={ shopperCurrency.code }\n            storeCurrencyCode={ storeCurrency.code }\n        />\n    </OrderSummarySection>\n</Modal>\n);\n\nconst renderHeader: FunctionComponent<{\n    headerLink: ReactNode;\n    onRequestClose?(): void;\n}> = ({\n    onRequestClose,\n    headerLink,\n}) => (<Fragment>\n    <a\n        className=\"cart-modal-close\"\n        href=\"#\"\n        onClick={ preventDefault(onRequestClose) }\n    >\n        <span className=\"is-srOnly\">\n            <TranslatedString id=\"common.close_action\" />\n        </span>\n        <IconClose />\n    </a>\n    <ModalHeader additionalClassName=\"cart-modal-title\">\n        <TranslatedString id=\"cart.cart_heading\" />\n    </ModalHeader>\n\n    { headerLink }\n</Fragment>);\n\nexport default OrderSummaryModal;\n","import { LineItemMap, ShopperCurrency as ShopperCurrencyType, StoreCurrency } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { memo, useCallback, FunctionComponent, ReactNode } from 'react';\n\nimport { ShopperCurrency } from '../currency';\nimport { TranslatedString } from '../locale';\nimport { IconGiftCertificate } from '../ui/icon';\nimport { ModalTrigger } from '../ui/modal';\n\nimport getItemsCount from './getItemsCount';\nimport getLineItemsCount from './getLineItemsCount';\nimport OrderSummaryModal from './OrderSummaryModal';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\n\nexport interface OrderSummaryDrawerProps {\n    lineItems: LineItemMap;\n    total: number;\n    headerLink: ReactNode;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    additionalLineItems?: ReactNode;\n}\n\nconst OrderSummaryDrawer: FunctionComponent<OrderSummaryDrawerProps & OrderSummarySubtotalsProps> = ({\n    additionalLineItems,\n    coupons,\n    discountAmount,\n    giftCertificates,\n    handlingAmount,\n    headerLink,\n    lineItems,\n    onRemovedCoupon,\n    onRemovedGiftCertificate,\n    shippingAmount,\n    shopperCurrency,\n    storeCreditAmount,\n    giftWrappingAmount,\n    storeCurrency,\n    subtotalAmount,\n    taxes,\n    total,\n}) => {\n    const renderModal = useCallback(props => (\n        <OrderSummaryModal\n            { ...props }\n            additionalLineItems={ additionalLineItems }\n            coupons={ coupons }\n            discountAmount={ discountAmount }\n            giftCertificates={ giftCertificates }\n            giftWrappingAmount={  giftWrappingAmount }\n            handlingAmount={ handlingAmount }\n            headerLink={ headerLink }\n            lineItems={ lineItems }\n            onRemovedCoupon={ onRemovedCoupon }\n            onRemovedGiftCertificate={ onRemovedGiftCertificate }\n            shippingAmount={ shippingAmount }\n            shopperCurrency={ shopperCurrency }\n            storeCreditAmount={ storeCreditAmount }\n            storeCurrency={ storeCurrency }\n            subtotalAmount={ subtotalAmount }\n            taxes={ taxes }\n            total={ total }\n        />\n    ), [\n        additionalLineItems,\n        coupons,\n        discountAmount,\n        giftCertificates,\n        handlingAmount,\n        headerLink,\n        lineItems,\n        onRemovedCoupon,\n        onRemovedGiftCertificate,\n        giftWrappingAmount,\n        shippingAmount,\n        shopperCurrency,\n        storeCreditAmount,\n        storeCurrency,\n        subtotalAmount,\n        taxes,\n        total,\n    ]);\n\n    return <ModalTrigger modal={ renderModal }>\n        { ({ onClick }) => <div\n            className=\"cartDrawer optimizedCheckout-orderSummary\"\n            onClick={ onClick }\n        >\n            <figure\n                className={ classNames(\n                    'cartDrawer-figure',\n                    { 'cartDrawer-figure--stack': getLineItemsCount(lineItems) > 1 }\n                ) }\n            >\n                <div className=\"cartDrawer-imageWrapper\">\n                    { getImage(lineItems) }\n                </div>\n            </figure>\n            <div className=\"cartDrawer-body\">\n                <h3 className=\"cartDrawer-items optimizedCheckout-headingPrimary\">\n                    <TranslatedString\n                        data={ { count: getItemsCount(lineItems) } }\n                        id=\"cart.item_count_text\"\n                    />\n                </h3>\n                <a>\n                    <TranslatedString id=\"cart.show_details_action\" />\n                </a>\n            </div>\n            <div className=\"cartDrawer-actions\">\n                <h3 className=\"cartDrawer-total optimizedCheckout-headingPrimary\">\n                    <ShopperCurrency amount={ total } />\n                </h3>\n            </div>\n        </div> }\n    </ModalTrigger>;\n};\n\nfunction getImage(lineItems: LineItemMap): ReactNode {\n    const productWithImage = lineItems.physicalItems[0] || lineItems.digitalItems[0];\n\n    if (productWithImage && productWithImage.imageUrl) {\n        return <img\n            alt={ productWithImage.name }\n            data-test=\"cart-item-image\"\n            src={ productWithImage.imageUrl }\n        />;\n    }\n\n    if (lineItems.giftCertificates.length) {\n        return <IconGiftCertificate />;\n    }\n}\n\nexport default memo(OrderSummaryDrawer);\n"],"sourceRoot":""}